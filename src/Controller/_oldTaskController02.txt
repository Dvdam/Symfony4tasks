<?php

namespace App\Controller;

use App\Entity\Task;
use App\Entity\User;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\HttpFoundation\Request;
use App\Form\TaskType;


class TaskController extends AbstractController
{
    public function index()
    {
        // Prueba de entidades y relaciones
        $em = $this->getDoctrine()->getManager();
        $task_repo = $this->getDoctrine()->getRepository(Task::class);
        // Obtengo todas las tareas
        // $tasks = $task_repo->findAll();
        $tasks = $task_repo->findBy([], ['id' => 'DESC']);

        // Recorremos las tareas y las treamos una a una
        // foreach($tasks as $task){
        //     echo $task->getUser()->getEmail().':'.$task->getTitle()."<br>";
        // }

        // $user_repo = $this->getDoctrine()->getRepository(User::class);
        // $users = $user_repo->findAll();

        // foreach($users as $user){
        //     echo "<h1>{$user->getName() } {$user->getSurname()}</h1>";
        //     foreach($user->getTasks() as $task){
        //         echo $task->getUser()->getEmail().':'.$task->getTitle()."<br>";
        //     }
        // }




        return $this->render('task/index.html.twig', [
            'tasks' => $tasks,
        ]);

    }

    // MEtodo para mostrar una tarea en particular
    public function detail(Task $task)
    {
        if(!$task){
        return $this->redirectToRoute('tasks');
        }

        return $this->render('task/detail.html.twig', [
            'task' => $task
        ]);
    }

    // Metodo para crear nuevas tareas
    public function creation(Request $request, \Symfony\Component\Security\Core\User\UserInterface $user)
    {
        $task = new Task();
        $form = $this->createForm(TaskType::class, $task);

        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()){
 
            $task->setCreatedAt(new \DateTime('now'));
            $task->setUser($user);

            // var_dump($task);

            $em = $this->getDoctrine()->getManager();
            $em->persist($task);
            $em->flush();


            return $this->redirect(
                $this->generatedUrl('task_detail', ['id' => $task->getId()]
                )
            )
        }

        return $this->render('task/creation.html.twig', [
            'form' => $form->createView()
        ]);
    }

    
}
